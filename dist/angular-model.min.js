!function(){"use strict";angular.module("model",[])}(),function(window){"use strict";function modelUtilsProvider(){function modelUtilsFactory(){return provider.utils}var provider=this;this.$get=modelUtilsFactory,this.utils=window.Model.utils}angular.module("model").provider("model.utils",modelUtilsProvider)}(window),function(window){"use strict";function ModelProvider($injector){function ModelFactory(){return function(options){return $injector.invoke(provider.define({},options).$get)}}function defineModel(modelProvider,options){function modelFactory(){return modelProvider.Model}modelProvider.$get=modelFactory,modelProvider.Model=function(){return(options.inherits?$injector.get(options.inherits+"Provider"):provider).Model.inherit(options.schema,function(construct,methods,virtuals,statics){return options.constructor.$construct=function(self,args){return construct(self,args)},angular.extend(methods,options.methods||{}),angular.extend(virtuals,options.virtuals||{}),angular.extend(statics,options.statics||{}),options.constructor})}()}var provider=this;this.$get=ModelFactory,this.define=defineModel,this.Model=function(){return window.Model({},function(construct){function Model(data){construct(this).load(data)}return Model})}()}angular.module("model").provider("Model",ModelProvider),ModelProvider.$inject=["$injector"]}(window),function(window){"use strict";function CollectionProvider($injector){function CollectionFactory(){return function(options){return $injector.invoke(provider.define({},options).$get)}}function defineCollection(collectionProvider,options){function collectionFactory(){return collectionProvider.Collection}collectionProvider.$get=collectionFactory,collectionProvider.Collection=function(){var Model=$injector.get(options.model+"Provider").Model;return new window.Model.Collection(Model,function(construct,methods,virtuals,statics){return options.constructor.$construct=function(self,args){return construct(self).load((args||{})[0]||[])},angular.extend(methods,base.methods,options.methods||{}),angular.extend(virtuals,base.virtuals,options.virtuals||{}),angular.extend(statics,base.statics,options.statics||{}),options.constructor})}()}function extendCollection(baseProvider,extension){baseProvider.$get=CollectionFactory,angular.extend(base.methods,extension.methods||{}),angular.extend(base.virtuals,extension.virtuals||{}),angular.extend(base.statics,extension.statics||{})}var provider=this,base={methods:{},statics:{},virtuals:{}};this.$get=CollectionFactory,this.define=defineCollection,this.extend=extendCollection}angular.module("model").provider("Collection",CollectionProvider),CollectionProvider.$inject=["$injector"]}(window);